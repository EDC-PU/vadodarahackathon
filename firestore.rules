rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is a member of a specific team
    function isTeamMember(teamId) {
      let team = get(/databases/$(database)/documents/teams/$(teamId)).data;
      // Check if the user is the leader
      return request.auth.uid == team.leader.uid ||
             // Check if the user is in the members array
             request.auth.uid in team.members.map(member => member.uid);
    }
    
    function isUserInTeam(teamId, userId) {
        let team = get(/databases/$(database)/documents/teams/$(teamId)).data;
        return userId == team.leader.uid || userId in team.members.map(m => m.uid);
    }

    match /users/{userId} {
      // Allow user to read their own document
      allow get: if request.auth != null;
      allow list: if request.auth != null;
      allow create: if request.auth.uid == userId;
      // Allow user to update their own document
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /teams/{teamId} {
      allow read: if request.auth != null && isTeamMember(teamId) || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null; // Team leaders create teams
      allow update: if request.auth != null && isTeamMember(teamId) || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'spoc';
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'spoc';
    }

    match /invitations/{invitationId} {
        allow read, update: if get(/databases/$(database)/documents/invitations/$(invitationId)).data.email == request.auth.token.email;
        allow create: if request.auth != null;
        allow list: if request.auth != null;
    }
    
    match /{document=**} {
      // Admin has full access to all documents
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
