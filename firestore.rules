rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins have unrestricted read/write access to all documents.
    // This is the most important rule to fix the permission errors.
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    // Rules for 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document (on signup)
      allow create: if request.auth != null;
      // Users can read/update their own profile.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Team members can read profiles of others in the same team.
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == resource.data.teamId && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId != null;
    }

    // Rules for 'teams' collection
    match /teams/{teamId} {
      // Authenticated users can create a team (they become a leader).
      allow create: if request.auth != null;
      // Team members can read their own team data.
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
      // Team leaders can update their own team data.
      allow update: if request.auth != null && get(/databases/$(database)/documents/teams/$(teamId)).data.leader.uid == request.auth.uid;
      // SPOCs can read team data for their own institute.
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'spoc' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.institute == resource.data.institute;
    }

    // Rules for public or semi-public data
    match /problemStatements/{psId} {
      // Any authenticated user can read problem statements.
      allow read: if request.auth != null;
    }

    match /announcements/{announcementId} {
      // Any authenticated user can read announcements.
      allow read: if request.auth != null;
    }
    
    match /config/{docId} {
       // Any authenticated user can read the event config.
      allow read: if request.auth != null;
    }
  }
}
