rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      // Anyone authenticated can create their own user profile
      allow create: if request.auth != null;
      // Users can read their own profile. Admins can read any profile.
      allow read: if request.auth.uid == userId || isAdmin();
      // Users can update their own profile. Admins can update any profile.
      allow update: if request.auth.uid == userId || isAdmin();
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Teams collection
    match /teams/{teamId} {
      allow read: if request.auth != null;
      // Only authenticated users can create a team
      allow create: if request.auth != null;
      // Only a team leader or an admin can update a team.
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == resource.data.leader.uid || isAdmin();
      // Only a team leader or an admin can delete a team.
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == resource.data.leader.uid || isAdmin();
    }
    
    // Problem Statements collection
    match /problemStatements/{statementId} {
      allow read: if request.auth != null;
      // Only admins can create, update or delete problem statements.
      allow write: if isAdmin();
    }
  }
}
