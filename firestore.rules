rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    function isAdmin() {
      return isAuth() && getRole(request.auth.uid) == 'admin';
    }

    function isSpoc() {
      return isAuth() && getRole(request.auth.uid) == 'spoc';
    }
    
    function isLeader(teamId) {
      return isAuth() && request.auth.uid == get(/databases/$(database)/documents/teams/$(teamId)).data.leader.uid;
    }

    // Collection rules
    match /users/{userId} {
      // Anyone can create their own user document upon signing up.
      // Admins and SPOCs can also create users.
      allow create: if isAuth() && (isOwner(userId) || isAdmin() || isSpoc());
      
      // Users can read their own data. Admins can read anyone's data.
      allow read: if isOwner(userId) || isAdmin();
      
      // Users can update their own data. Admins can update anyone's data.
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    match /teams/{teamId} {
      allow read: if isAuth();
      // Only authenticated users can create a team (as a leader).
      allow create: if isAuth(); 
      // Only the team leader or an admin can update or delete a team.
      allow update, delete: if isLeader(teamId) || isAdmin();
    }

    match /problemStatements/{psId} {
      allow read: if isAuth();
      allow create, update, delete: if isAdmin();
    }
    
    match /announcements/{announcementId} {
      // Anyone, including unauthenticated users (for the landing page), can read announcements.
      allow read: if true;
      // Only admins can manage announcements.
      allow create, update, delete: if isAdmin();
    }
  }
}
