rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read/update their own profile, anyone can create a user profile (for sign-up).
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Config can be read by anyone (for registration deadlines, etc.) but only written by admins
    match /config/{docId} {
      allow read: if true;
      // Note: Admin-only write access should be enforced via server-side logic (Genkit flows)
      // For simplicity, we are not adding complex role-based write rules here.
      // All sensitive writes are handled by server-side flows with Admin SDK.
      allow write: if true; // Placeholder, assuming admin-only writes from backend
    }

    // Teams can be read by any authenticated user (to see team details)
    // Writes are more restricted.
    match /teams/{teamId} {
      allow read: if request.auth.uid != null;
      // Allow updates only by server-side logic or authenticated users for specific fields.
      // This is a simplified rule. Complex logic (like only leader can edit) should be in flows.
      allow update: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
    }

    // Problem statements are public.
    match /problemStatements/{statementId} {
        allow read: if true;
        // Writes should be handled by admin-only flows
        allow write: if true; // Placeholder for admin backend
    }
    
    // Team invites can be created by authenticated users.
    // They should be readable by anyone with the invite ID (for joining teams)
    match /teamInvites/{inviteId} {
      allow read: if true; // Allow public read for invite validation
      allow write: if request.auth.uid != null; // Only authenticated users can create invites
    }

    // Announcements can be read by anyone.
    // Writes are handled by admin-only flows.
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if true; // Placeholder for admin backend
    }
    
    // Notifications can be created by any authenticated user.
    // They can only be read/updated by the recipient.
    match /notifications/{notificationId} {
      allow create: if request.auth.uid != null;
      allow read, update: if request.auth.uid == resource.data.recipientUid;
    }
  }
}