rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is the leader of a specific team
    function isTeamLeader(teamId) {
      return exists(/databases/$(database)/documents/teams/$(teamId)) &&
             get(/databases/$(database)/documents/teams/$(teamId)).data.leader.uid == request.auth.uid;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document.
      allow create: if request.auth != null && request.auth.uid == userId;

      // Users can read their own document. Admins can read any user document.
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());

      // Users can update their own document. Admins can update any user document.
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());

      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Rules for the 'teams' collection
    match /teams/{teamId} {
       // Any authenticated user can read team data.
      allow read: if request.auth != null;

      // Any authenticated user can create a team (register).
      allow create: if request.auth != null;

      // Only the team leader or an admin can update a team.
      allow update: if request.auth != null && (isTeamLeader(teamId) || isAdmin());

      // Only the team leader or an admin can delete a team.
      allow delete: if request.auth != null && (isTeamLeader(teamId) || isAdmin());
    }

    // Rules for the 'problemStatements' collection
    match /problemStatements/{statementId} {
      // Any authenticated user can read problem statements.
      allow read: if request.auth != null;

      // Only admins can create, update, or delete problem statements.
      allow write: if isAdmin();
    }
  }
}
