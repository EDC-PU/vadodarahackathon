rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isSignedIn() {
      return request.auth != null;
    }

    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own profile, admins can read any.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isRole('admin');
    }

    // Authenticated users can read problem statements, only admins can write.
    match /problemStatements/{statementId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isRole('admin');
    }

    // Rules for teams collection
    match /teams/{teamId} {
      allow read: if isSignedIn();
      // Only the team leader can update the team.
      allow update: if isSignedIn() && get(/databases/$(database)/documents/teams/$(teamId)).data.leader.uid == request.auth.uid;
      // Team leader can create a team
      allow create: if isSignedIn();
      // Only admin can delete a team
      allow delete: if isRole('admin');
    }
  }
}
